package com.queue.implementation;

public class LinkedList {

	public Node head;
	public int size;
	
	public LinkedList() {
		this.head = null;
	}
	
	public void insert(int newValue) {
		
		Node temp = new Node(newValue);
		
		if(head == null) {
			head = temp;
			size++;
			return;
		}
		
		Node cur = head;
		Node last ;
		while(cur.next!=null) {
			cur = cur.next;
		}
		last = cur;
		last.next = temp;
		size++;
	}
	
	public void insertAfter(int afterValue,int newValue) {
		Node temp = new Node(newValue);
		
		if(head == null) {
			System.out.println("list is empty");
			return;
		}
		
		Node cur = this.head;
		Node to = null;
		while(cur!=null) {
			if(cur.value == afterValue) {
				to = cur;
				break;
			}
			cur=cur.next;
		}
		
		if(to == null) {
			System.out.println("element not found");
			return;
		}
		
		temp.next = to.next;
		to.next = temp;
		System.out.println("value inserted after "+ afterValue);
		
		
	}
	
	public void append(int newValue) {
		
		Node temp = new Node(newValue);
		
		Node cur = this.head;
		while(cur.next!=null) {
			cur=cur.next;
		}
		
		cur.next = temp;
	}
	
	
	
	public void delete(int val) {
		Node cur = this.head;
		Node prev = null;
		while(cur.next!=null) {
			if(cur.value==val) {
				prev.next=cur.next;
				return;
			}
			prev=cur;
			cur=cur.next;
		}
		//need to delete cur
		
		
		
	}
	
	
	
	
	public void display() {
		
		System.out.print("Head ==>");
		
		Node cur = head;
		while(cur!=null) {
			System.out.print(cur.value + " ");
			cur = cur.next;
		}
		System.out.println();
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
